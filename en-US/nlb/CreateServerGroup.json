{
  "name": "CreateServerGroup",
  "deprecated": false,
  "protocol": "HTTP|HTTPS",
  "method": "POST",
  "pathPattern": "",
  "parameters": [
    {
      "name": "AddressIPVersion",
      "description": "The protocol version. Valid values:\n\n*   **ipv4** (default): IPv4\n*   **DualStack**: dual stack",
      "position": "Body",
      "type": "String",
      "required": false
    },
    {
      "name": "AnyPortEnabled",
      "description": "Specifies whether to enable all-port forwarding. Valid values:\n\n*   **true**\n*   **false** (default)",
      "position": "Body",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "ClientToken",
      "description": "The client token that is used to ensure the idempotence of the request.\n\nYou can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.\n\n> If you do not specify this parameter, the system automatically uses the **request ID** as the **client token**. The **request ID** may be different for each request.",
      "position": "Body",
      "type": "String",
      "required": false
    },
    {
      "name": "ConnectionDrainEnabled",
      "description": "Specifies whether to enable connection draining. Valid values:\n\n*   **true**\n*   **false** (default)",
      "position": "Body",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "ConnectionDrainTimeout",
      "description": "The timeout period of connection draining. Unit: seconds. Valid values: **0** to **900**.",
      "position": "Body",
      "type": "Integer",
      "required": false
    },
    {
      "name": "DryRun",
      "description": "Specifies whether to perform a dry run, without performing the actual request. Valid values:\n\n*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.\n*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.",
      "position": "Body",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "HealthCheckConfig",
      "description": "The configurations of the health check feature.",
      "position": "Body",
      "type": "Struct",
      "required": false
    },
    {
      "name": "PreserveClientIpEnabled",
      "description": "Specifies whether to enable client IP preservation. Valid values:\n\n*   **true**\n*   **false** (default)",
      "position": "Body",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "Protocol",
      "description": "The protocol used to forward requests to the backend servers. Valid values:\n\n*   **TCP** (default)\n*   **UDP**\n*   **TCPSSL**",
      "position": "Body",
      "type": "String",
      "required": false
    },
    {
      "name": "RegionId",
      "description": "The region ID of the NLB instance.\n\nYou can call the [DescribeRegions](~~443657~~) operation to query the most recent region list.",
      "position": "Body",
      "type": "String",
      "required": false
    },
    {
      "name": "ResourceGroupId",
      "description": "The ID of the resource group to which the server group belongs.",
      "position": "Body",
      "type": "String",
      "required": false
    },
    {
      "name": "Scheduler",
      "description": "The scheduling algorithm. Valid values:\n\n*   **Wrr:** The weighted round-robin algorithm is used. Backend servers with higher weights receive more requests than backend servers with lower weights. This is the default value.\n*   **rr:** The round-robin algorithm is used. Requests are forwarded to backend servers in sequence.\n*   **sch:** Source IP hashing is used. Requests from the same source IP address are forwarded to the same backend server.\n*   **tch:** Four-element hashing is used. It specifies consistent hashing that is based on four factors: source IP address, destination IP address, source port, and destination port. Requests that contain the same information based on the four factors are forwarded to the same backend server.\n*   **qch**: QUIC ID hashing. Requests that contain the same QUIC ID are forwarded to the same backend server.",
      "position": "Body",
      "type": "String",
      "required": false
    },
    {
      "name": "ServerGroupName",
      "description": "The name of the server group.\n\nThe name must be 2 to 128 characters in length, and can contain letters, digits, periods (.), underscores (\\_), and hyphens (-). The name must start with a letter.",
      "position": "Body",
      "type": "String",
      "required": true
    },
    {
      "name": "ServerGroupType",
      "description": "The type of server group. Valid values:\n\n*   **Instance**: allows you to add servers of the **Ecs**, **Ens**, or **Eci** type. This is the default value.\n*   **Ip**: allows you to add servers by specifying IP addresses.",
      "position": "Body",
      "type": "String",
      "required": false
    },
    {
      "name": "Tag",
      "description": "The tags.",
      "position": "Body",
      "type": "RepeatList",
      "required": false,
      "sub_parameters": [
        {
          "name": "Key",
          "position": "FormData",
          "type": "String",
          "required": false
        },
        {
          "name": "Value",
          "position": "FormData",
          "type": "String",
          "required": false
        }
      ]
    },
    {
      "name": "VpcId",
      "description": "The ID of the virtual private cloud (VPC) to which the server group belongs.\n\n> If **ServerGroupType** is set to **Instance**, only servers in the specified VPC can be added to the server group.",
      "position": "Body",
      "type": "String",
      "required": true
    }
  ]
}