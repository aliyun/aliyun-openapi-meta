{
  "name": "HandleSecurityEvents",
  "protocol": "HTTP|HTTPS",
  "method": "GET|POST",
  "pathPattern": "",
  "parameters": [
    {
      "name": "MarkBatch",
      "description": "Specifies whether to add multiple alert events to the whitelist at a time. Valid values:\n\n*   **true**: yes\n*   **false**: no",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "MarkMissParam",
      "description": "The whitelist rule. The value of this parameter is in the JSON format and contains the following fields:\n\n*   **field**: The field based on which alert events are added to the whitelist.\n\n*   **operate**: The method that is used to added alert events to the whitelist. Valid values:\n\n    *   **notContains**: does not contain\n    *   **contains**: contains\n    *   **regex**: matches by regular expression\n    *   **strEqual**: equals\n    *   **strNotEqual**: does not equal\n\n*   **fieldValue**: The value of the field based on which alert events are added to the whitelist.\n\n*   **uuid**: The application scope of the whitelist rule. Valid values:\n\n    *   **part**: the current asset\n    *   **ALL**: all assets\n\n>  You can call the [DescribeSecurityEventOperations](~~DescribeSecurityEventOperations~~) operation to obtain the fields that you can specify for **field**.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "OperationCode",
      "description": "The operation that you want to perform to handle the alert events. Valid values:\n\n*   **block_ip**: blocks the source IP address.\n*   **advance\\_mark\\_mis_info**: adds the alert events to the whitelist.\n*   **ignore**: ignores the alert events.\n*   **manual_handled**: marks the alert events as manually handled.\n*   **kill_process**: terminates the malicious process.\n*   **cleanup**: performs in-depth virus detection and removal.\n*   **kill\\_and_quara**: kills the malicious processes and quarantines the source file.\n*   **disable\\_malicious_defense**: stops the container on which the alerting files or processes exist.\n*   **client\\_problem_check**: performs troubleshooting.\n*   **quara**: quarantines the source file of the malicious process.",
      "position": "Query",
      "type": "String",
      "required": true
    },
    {
      "name": "OperationParams",
      "description": "The configuration of the operation that you want to perform to handle the alert events.\n\n>  If you set OperationCode to `kill_and_quara` or `block_ip`, you must specify OperationParams. If you set OperationCode to other values, you can leave OperationParams empty.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "Remark",
      "description": "The remarks of the handling operation.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "SecurityEventIds",
      "description": "The IDs of the alert events.",
      "position": "Query",
      "type": "RepeatList",
      "required": true
    },
    {
      "name": "SourceIp",
      "description": "The source IP address of the request.",
      "position": "Query",
      "type": "String",
      "required": false
    }
  ]
}