{
  "name": "UpdateRule",
  "protocol": "HTTP|HTTPS",
  "method": "GET|POST",
  "pathPattern": "",
  "parameters": [
    {
      "name": "IotInstanceId",
      "description": "The ID of the instance. You can view the instance **ID** on the **Overview** page in the IoT Platform console.\n\n>*   If your instance has an ID, you must configure this parameter. If you do not set this parameter, the call fails.\n>*   If your instance has no **Overview** page or ID, you do not need to set this parameter.\n\nFor more information, see [Overview](~~356505~~).",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "Name",
      "description": "The name of the rule. The rule name must be 1 to 30 characters in length, and can contain letters, digits, underscores (\\_), and hyphens (-).",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "ProductKey",
      "description": "The **ProductKey** of the product to which the rule applies.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "RuleDesc",
      "description": "The description of the rule. The description can be up to 100 characters in length.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "RuleId",
      "description": "The ID of the rule that you want to modify. You can log on to the IoT Platform console and choose **Rules** > **Data Forwarding** to view the rule ID. You can also call the [ListRule](~~69486~~) operation and view the rule ID in the response.",
      "position": "Query",
      "type": "Long",
      "required": true
    },
    {
      "name": "Select",
      "description": "The SQL SELECT statement to be executed. For more information, see [SQL expressions](~~30554~~).\n\n>  Specify the content that follows the SELECT keyword for this parameter. For example, if the SELECT statement is `SELECT a,b,c`, specify `a,b,c` for this parameter.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "ShortTopic",
      "description": "The topic to which this rule is applied. Syntax: `${deviceName}/topicShortName`. `${deviceName}` specifies the name of the device, and `topicShortName` specifies the custom name of the topic.\n\n*   Basic communication topics or Thing Specification Language (TSL)-based communication topics. Syntax: `${deviceName}/topicShortName`. You can replace `${deviceName}` with the `+` wildcard. The wildcard indicates that the topic applies to all devices under the product. Valid values of `topicShortName`:\n\n    *   `/thing/event/property/post`: submits the property data of a device.\n\n    *   `/thing/event/${tsl.event.identifier}/post`: submits the event data of a device. `${tsl.event.identifier}` specifies the identifier of an event in the TSL model.\n\n    *   `/thing/lifecycle`: submits device lifecycle changes.\n\n    *   `/thing/downlink/reply/message`: sends a response to a request from IoT Platform.\n\n    *   `/thing/list/found`: submits the data when a gateway detects a new sub-device.\n\n    *   `/thing/topo/lifecycle`: submits device topology changes.\n\n    *   `/thing/event/property/history/post`: submits historical property data of a device.\n\n    *   `/thing/event/${tsl.event.identifier}/post`: submits the historical event data of a device. `${tsl.event.identifier}` specifies the identifier of an event in the TSL.\n\n    *   `/ota/upgrade`: submits OTA update statuses.\n\n    *   `/ota/version/post`: submits OTA module versions.\n\n    *   `/thing/deviceinfo/update`: submits device tag changes.\n\n    *   `/edge/driver/${driver_id}/point_post`: submits pass-through data from Link IoT Edge. `${driver_id}` specifies the ID of the driver that a device uses to access Link IoT Edge.\n\n        `${packageId}/${jobId}/ota/job/status`: submits the statuses of OTA update batches. This topic is a basic communication topic. `${packageId}` specifies the ID of the update package. `${jobId}` specifies the ID of the update batch.\n\n*   Custom topics. Example: `${deviceName}/user/get`.\n\n    You can call the [QueryProductTopic](~~69647~~) operation to view all custom topics of the product.\n\n    When you specify a custom topic, you can use the `+` and `#` wildcards.\n\n    *   You can replace `${deviceName}` with the `+` wildcard. The wildcard indicates that the topic applies to all devices under the product.\n\n    *   You can replace the fields that follow ${deviceName} with `/user/#`. The `#` wildcard indicates that the topic applies whatever values are specified for the fields that follow`/user`.\n\n        For more information about how to use wildcards, see [Wildcards in topics](~~85539~~).\n\n*   Topic that is used to submit device status changes: `${deviceName}`.\n\n    You can use the `+` wildcard. In this case, the status changes of all devices under the product are submitted.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "Topic",
      "description": "The complete topic to which the rule applies.\n\nIf you specify this parameter, you do not need to specify the **ProductKey**, **ShortTopic**, and **TopicType** parameters.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "TopicType",
      "description": "*   **0**: The topic is a basic communication topic or TSL-based communication topic.****\n*   **1**: The topic is a custom topic.\n*   **2**: The topic is used to submit device status changes. Syntax: `/as/mqtt/status/${productKey}/${deviceName}`.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "Where",
      "description": "The condition that is used to trigger the rule. For more information, see [SQL expressions](~~30554~~).\n\n>  Specify the content that follows the WHERE keyword for this parameter. For example, if the WHERE statement is `WHERE a>10`, specify `a>10` for this parameter.",
      "position": "Query",
      "type": "String",
      "required": false
    }
  ]
}