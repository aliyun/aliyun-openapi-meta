{
  "name": "CertificatePublicKeyEncrypt",
  "deprecated": false,
  "protocol": "HTTPS",
  "method": "GET|POST",
  "pathPattern": "",
  "parameters": [
    {
      "name": "Algorithm",
      "description": "The encryption algorithm. Valid values:\n\n*   RSAES_OAEP_SHA\\_1\n\n*   RSAES_OAEP_SHA\\_256\n\n*   SM2PKE\n\n>The SM2PKE encryption algorithm is supported only in regions in mainland China. In these regions, managed hardware security modules (HSMs) are used. For more information, see [Managed HSM overview](~~125803~~).",
      "position": "Query",
      "type": "String",
      "required": true
    },
    {
      "name": "CertificateId",
      "description": "The ID of the certificate. The ID must be globally unique in Certificates Manager.",
      "position": "Query",
      "type": "String",
      "required": true
    },
    {
      "name": "Plaintext",
      "description": "The data that you want to encrypt.\n\nThe value is encoded in Base64. For example, if the hexadecimal data that you want to encrypt is `[0x31, 0x32, 0x33, 0x34]`, the Base64-encoded data is `MTIzNA==`.\n\nThe size of data that can be encrypted varies based on the encryption algorithm that you use:\n\n*   RSAES_OAEP_SHA\\_1: 214 bytes\n*   RSAES_OAEP_SHA\\_256: 190 bytes\n*   SM2PKE: 6,047 bytes\n\nIf the size of data that you want to encrypt exceeds the preceding limits, you can call the [GenerateDataKey](~~28948~~) operation to generate a data key to encrypt the data. Then, call the CertificatePublicKeyEncrypt operation to encrypt the data key.",
      "position": "Query",
      "type": "String",
      "required": true
    }
  ]
}