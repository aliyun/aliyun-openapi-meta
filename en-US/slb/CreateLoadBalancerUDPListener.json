{
  "name": "CreateLoadBalancerUDPListener",
  "deprecated": false,
  "protocol": "HTTP|HTTPS",
  "method": "GET|POST",
  "pathPattern": "",
  "parameters": [
    {
      "name": "AclId",
      "description": "The ID of the network ACL that is associated with the listener.\n\nIf **AclStatus** is set to **on**, this parameter is required.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "AclStatus",
      "description": "Specifies whether to enable access control. Valid values:\n\n*   **on**: yes\n*   **off** (default): no",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "AclType",
      "description": "The type of the network ACL. Valid values:\n\n*   **white**: a whitelist. Only requests from the IP addresses or CIDR blocks in the network ACL are forwarded. Whitelists apply to scenarios in which you want to allow only specific IP addresses to access an application. After a whitelist is configured, only IP addresses in the whitelist can access the CLB listener. Risks may arise if the whitelist is improperly set.\n\n    If a whitelist is configured but no IP address is added to the whitelist, the listener forwards all requests.\n\n*   **black**: a blacklist. All requests from the IP addresses or CIDR blocks in the network ACL are blocked. Blacklists apply to scenarios in which you want to deny access from specific IP addresses to an application.\n\n    If a blacklist is configured for a listener but no IP address is added to the blacklist, the listener forwards all requests.\n\nIf **AclStatus** is set to **on**, this parameter is required.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "BackendServerPort",
      "description": "The backend port used by the CLB instance.\n\nValid values: **1** to **65535**.\n\nIf the **VServerGroupId** parameter is not set, this parameter is required.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "Bandwidth",
      "description": "The maximum bandwidth of the listener. Unit: Mbit/s. Valid values:\n\n**-1**: For a pay-by-data-transfer Internet-facing CLB instance, you can set this parameter to **-1**. This way, the bandwidth of the listener is unlimited.",
      "position": "Query",
      "type": "Integer",
      "required": true
    },
    {
      "name": "Description",
      "description": "The name of the listener.\n\nThe name must be 1 to 256 characters in length, and can contain letters, digits, hyphens (-), forward slashes (/), periods (.), and underscores (\\_).",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "HealthCheckConnectPort",
      "description": "The port that is used for health checks.\n\nValid values: **1** to **65535**.\n\nIf this parameter is not set, the backend port specified by **BackendServerPort** is used for health checks.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "HealthCheckConnectTimeout",
      "description": "The timeout period of a health check.\n\nIf a backend server, such as an Elastic Compute Service (ECS) instance, does not respond to a probe packet within the specified timeout period, the server fails the health check. Unit: seconds.\n\nValid values: **1** to **300**.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "HealthCheckSwitch",
      "description": "Specifies whether to enable the health check feature. Valid values:\n\n*   **on** (default): yes\n*   **off**: no",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "HealthyThreshold",
      "description": "The number of times that an unhealthy backend server must consecutively pass health checks before it is declared healthy. In this case, the health status is changed from **fail** to **success**.\n\nValid values: **2** to **10**.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "ListenerPort",
      "description": "The frontend port used by the CLB instance.\n\nValid values: **1** to **65535**.",
      "position": "Query",
      "type": "Integer",
      "required": true
    },
    {
      "name": "LoadBalancerId",
      "description": "The ID of the CLB instance.",
      "position": "Query",
      "type": "String",
      "required": true
    },
    {
      "name": "MasterSlaveServerGroupId",
      "description": "The ID of the primary/secondary server group.\n\n>  You can set only one of the VServerGroupId and MasterSlaveServerGroupId parameters.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "ProxyProtocolV2Enabled",
      "description": "Specifies whether to use the Proxy protocol to pass client IP addresses to backend servers. Valid values:\n\n*   **true**: yes\n*   **false** (default): no",
      "position": "Query",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "RegionId",
      "description": "The ID of the region where the CLB instance is deployed.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "Scheduler",
      "description": "The routing algorithm. Valid values:\n\n*   **wrr** (default): Backend servers with higher weights receive more requests than backend servers with lower weights.\n*   **rr**: Requests are distributed to backend servers in sequence.\n*   **sch**: specifies consistent hashing that is based on source IP addresses. Requests from the same source IP address are distributed to the same backend server.\n*   **tch**: specifies consistent hashing that is based on four factors: source IP address, destination IP address, source port, and destination port. Requests that contain the same information based on the four factors are distributed to the same backend server.\n*   **qch**: specifies consistent hashing that is based on QUIC connection IDs. Requests that contain the same QUIC connection ID are distributed to the same backend server.\n\nOnly high-performance CLB instances support the sch, tch, and qch consistent hashing algorithms.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "Tag",
      "description": "The tags.",
      "position": "Query",
      "type": "RepeatList",
      "required": false,
      "sub_parameters": [
        {
          "name": "Key",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "Value",
          "position": "Query",
          "type": "String",
          "required": false
        }
      ]
    },
    {
      "name": "UnhealthyThreshold",
      "description": "The number of times that a healthy backend server must consecutively fail health checks before it is declared unhealthy. In this case, the health status is changed from **success** to **fail**.\n\nValid values: **2** to **10**.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "VServerGroupId",
      "description": "The ID of the vServer group.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "healthCheckExp",
      "description": "The response string for UDP listener health checks. The string must be 1 to 64 characters in length and can contain only letters and digits.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "healthCheckInterval",
      "description": "The interval between two consecutive health checks. Unit: seconds.\n\nValid values: **1** to **50**.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "healthCheckReq",
      "description": "The request string for UDP listener health checks. The string must be 1 to 64 characters in length and can contain only letters and digits.",
      "position": "Query",
      "type": "String",
      "required": false
    }
  ]
}