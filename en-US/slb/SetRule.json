{
  "name": "SetRule",
  "deprecated": false,
  "protocol": "HTTP|HTTPS",
  "method": "GET|POST",
  "pathPattern": "",
  "parameters": [
    {
      "name": "Cookie",
      "description": "The cookie that is configured on the server.\n\nThe cookie must be 1 to 200 characters in length and can contain only ASCII characters and digits. It cannot contain commas (,), semicolons (;), or space characters. It cannot start with a dollar sign ($).\n\n>  This parameter is required and takes effect if **StickySession** is set to **on** and **StickySessionType** is set to **server**.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "CookieTimeout",
      "description": "The timeout period of a cookie. Unit: seconds. Valid values: **1** to **86400**.\n\n>  This parameter is required and takes effect if **StickySession** is set to **on** and **StickySessionType** is set to **insert**.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "HealthCheck",
      "description": "Specifies whether to enable the health check feature. Valid values:\n\n*   **on**: yes\n*   **off**: no\n\n>  This parameter is required and takes effect if the **ListenerSync** parameter is set to **off**.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "HealthCheckConnectPort",
      "description": "The port that is used for health checks. Valid values: **1** to **65535**.\n\n>  This parameter takes effect when the **HealthCheck** parameter is set to **on**.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "HealthCheckDomain",
      "description": "The domain name that is used for health checks. Valid values:\n\n*   **$\\_ip**: the private IP address of a backend server. If you do not set this parameter or set the parameter to $\\_ip, the SLB instance uses the private IP address of each backend server for health checks.\n*   **domain**: The domain name must be 1 to 80 characters in length, and can contain letters, digits, periods (.), and hyphens (-).\n\n>  This parameter takes effect if the **HealthCheck** parameter is set to **on**.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "HealthCheckHttpCode",
      "description": "The HTTP status code for a successful health check. Multiple HTTP status codes are separated by commas (,).\n\nValid values: **http\\_2xx**, **http\\_3xx**, **http\\_4xx**, and **http\\_5xx**.\n\n>  This parameter is required and takes effect if the **HealthCheck** parameter is set to **on**.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "HealthCheckInterval",
      "description": "The interval between two consecutive health checks. Unit: seconds. Valid values: **1** to **50**.\n\n>  This parameter is required and takes effect if the **HealthCheck** parameter is set to **on**.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "HealthCheckTimeout",
      "description": "The timeout period of a health check response. If a backend server, such as an Elastic Compute Service (ECS) instance, does not return a health check response within the specified timeout period, the server fails the health check. Unit: seconds. Valid values: **1** to **300**.\n\n>  This parameter is required and takes effect if the **HealthCheck** parameter is set to **on**.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "HealthCheckURI",
      "description": "The URI that is used for health checks.\n\n>  This parameter is required and takes effect if the **HealthCheck** parameter is set to **on**.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "HealthyThreshold",
      "description": "The number of times that an unhealthy backend server must consecutively pass health checks before it is declared healthy. In this case, the health status is changed from **fail** to **success**.\n\nValid values: **2** to **10**.\n\n>  This parameter is required and takes effect if the **HealthCheck** parameter is set to **on**.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "ListenerSync",
      "description": "Specifies whether to use the scheduling algorithm, session persistence, and health check configurations of the listener. Valid values:\n\n*   **on**: uses the configurations of the listener.\n*   **off**: does not use the configurations of the listener. You can customize the health check and session persistence configurations for the forwarding rule.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "RegionId",
      "description": "The ID of the region where the Classic Load Balancer (CLB) instance is deployed.\n\nYou can call the [DescribeRegions](~~27584~~) operation to query the most recent region list.",
      "position": "Query",
      "type": "String",
      "required": true
    },
    {
      "name": "RuleId",
      "description": "The ID of the forwarding rule.",
      "position": "Query",
      "type": "String",
      "required": true
    },
    {
      "name": "RuleName",
      "description": "The name of the forwarding rule. The name must be 1 to 80 characters in length and can contain letters, digits, hyphens (-), forward slashes (/), periods (.), and underscores (\\_).\n\n>  Forwarding rule names must be unique within the same listener.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "Scheduler",
      "description": "The scheduling algorithm. Valid values:\n\n*   **wrr**: Backend servers with higher weights receive more requests than those with lower weights.\n*   **rr**: Requests are distributed to backend servers in sequence.\n\n>  This parameter is required and takes effect if the **ListenerSync** parameter is set to **off**.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "StickySession",
      "description": "Specifies whether to enable session persistence. Valid values:\n\n*   **on**: yes\n*   **off**: no\n\nThis parameter is required and takes effect if the **ListenerSync** parameter is set to **off**.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "StickySessionType",
      "description": "The method that is used to handle a cookie. Valid values:\n\n*   **insert**: inserts a cookie.\n\n    CLB inserts the backend server ID as a cookie into the first HTTP or HTTPS response that is sent to a client. The next request from the client will contain this cookie, and the listener will distribute this request to the recorded backend server.\n\n*   **server**: rewrites a cookie.\n\n    When CLB detects a user-defined cookie, it overwrites the original cookie with the user-defined cookie. The next request from the client will contain the user-defined cookie, and the listener will distribute this request to the recorded backend server.\n\n>  This parameter is required and takes effect if the **StickySession** parameter is set to **on**.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "UnhealthyThreshold",
      "description": "The number of times that a healthy backend server must consecutively fail health checks before it is declared unhealthy. In this case, the health status is changed from **success** to **fail**.\n\nValid values: **2** to **10**.\n\n>  This parameter is required and takes effect if the **HealthCheck** parameter is set to **on**.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "VServerGroupId",
      "description": "The ID of the vServer group that is associated with the forwarding rule.",
      "position": "Query",
      "type": "String",
      "required": false
    }
  ]
}