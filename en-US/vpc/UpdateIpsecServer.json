{
  "name": "UpdateIpsecServer",
  "deprecated": false,
  "protocol": "HTTP|HTTPS",
  "method": "GET|POST",
  "pathPattern": "",
  "parameters": [
    {
      "name": "ClientIpPool",
      "description": "The client CIDR block from which an IP address is allocated to the virtual network interface controller (NIC) of the client.\n\n>  The client CIDR block must not overlap with the CIDR blocks of the VPC.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "ClientToken",
      "description": "The client token that is used to ensure the idempotence of the request.\n\nYou can use the client to generate a value, and you must make sure that each request has a unique token value. The client token can contain only ASCII characters.\n\n>  If you do not specify this parameter, the system automatically uses the value of **RequestId** as the value of **ClientToken**. The **request ID** may be different for each request.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "DryRun",
      "description": "Specifies whether to only precheck this request. Valid values:\n\n*   **true**: prechecks the request without modifying the configurations of the IPsec server. The system checks the required parameters, request format, and service limits. If the request fails to pass the precheck, an error code is returned. If the request passes the precheck, the `DryRunOperation` error code is returned.\n*   **false**: sends the request. This is the default value. If the request passes the precheck, the system modifies the configurations of the IPsec server.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "EffectImmediately",
      "description": "Specifies whether to delete the current IPsec tunnel and initiate negotiations again. Valid values:\n\n*   **true**: immediately initiates negotiations after the configuration is complete.\n*   **false**: initiates negotiations when inbound traffic is detected. This is the default value.",
      "position": "Query",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "IkeConfig",
      "description": "The configuration of Phase 1 negotiation. Valid values:\n\n*   **IkeVersion**: the IKE version. Valid values: **ikev1** and **ikev2**. Default value: **ikev2**.\n*   **IkeMode**: the IKE negotiation mode. Default value: **main**.\n*   **IkeEncAlg**: the encryption algorithm that is used in Phase 1 negotiation. Default value: **aes**.\n*   **IkeAuthAlg**: the authentication algorithm that is used in Phase 1 negotiation. Default value: **sha1**.\n*   **IkePfs**: the Diffie-Hellman key exchange algorithm that is used in Phase 1 negotiation. Default value: **group2**.\n*   **IkeLifetime**: the security association (SA) lifetime determined by Phase 1 negotiation. Unit: seconds. Valid values: **0** to **86400**. Default value: **86400**.\n*   **LocalId**: the identifier of the IPsec server. The value can be a fully qualified domain name (FQDN) or an IP address. The default value is the public IP address of the VPN gateway.\n*   **RemoteId**: the peer identifier. The value can be an FQDN or an IP address. The default value is empty.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "IpsecConfig",
      "description": "The configuration of Phase 2 negotiation. Valid values:\n\n*   **IpsecEncAlg**: the encryption algorithm that is used in Phase 2 negotiation. Default value: **aes**.\n*   **IpsecAuthAlg**: the authentication algorithm that is used in Phase 2 negotiation. Default value: **sha1**.\n*   **IpsecPfs**: forwards packets of all protocols. The Diffie-Hellman key exchange algorithm that is used in Phase 2 negotiation. Default value: **group2**.\n*   **IpsecLifetime**: the SA lifetime determined by Phase 2 negotiation. Unit: seconds. Valid values: **0** to **86400**. Default value: **86400**.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "IpsecServerId",
      "description": "The IPsec server ID.",
      "position": "Query",
      "type": "String",
      "required": true
    },
    {
      "name": "IpsecServerName",
      "description": "The IPsec server name.\n\nThe name must be 1 to 100 characters in length and cannot start with `http://` or `https://`.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "LocalSubnet",
      "description": "The local CIDR blocks, which are the CIDR blocks of the virtual private cloud (VPC) for the client to access.\n\nMultiple CIDR blocks are separated with commas (,). Example: 192.168.1.0/24,192.168.2.0/24.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "Psk",
      "description": "The pre-shared key.\n\nThe pre-shared key is used for identity authentication between the IPsec server and the client. The key must be 1 to 100 characters in length.\n\nIf you do not specify a pre-shared key, the system randomly generates a 16-character string as the pre-shared key. You can call the [ListIpsecServers](~~205453~~) operation to query the pre-shared keys that are generated by the system.\n\n>  The pre-shared key of the IPsec server must be the same as the client key. Otherwise, the IPsec server cannot be connected to the client.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "PskEnabled",
      "description": "Specifies whether to enable pre-shared key authentication. If you set the value to **true**, pre-shared key authentication is enabled.",
      "position": "Query",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "RegionId",
      "description": "The ID of the region where the IPsec server is created.\n\nYou can call the [DescribeRegions](~~36063~~) operation to query the most recent region list.",
      "position": "Query",
      "type": "String",
      "required": true
    }
  ]
}