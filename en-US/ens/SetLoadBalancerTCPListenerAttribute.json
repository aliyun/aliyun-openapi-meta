{
  "name": "SetLoadBalancerTCPListenerAttribute",
  "deprecated": false,
  "protocol": "HTTP|HTTPS",
  "method": "GET|POST",
  "pathPattern": "",
  "parameters": [
    {
      "name": "Description",
      "description": "The description of the listener. The description must be **1** to **80** characters in length.\n\n>  The value cannot start with `http://` or `https://`.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "EipTransmit",
      "description": "Specifies whether to enable Elastic IP address (EIP) pass-through. Valid values:\n\n*   **on**\n*   **off** (default)",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "EstablishedTimeout",
      "description": "The timeout period of a connection. Valid values: **10** to **900**. Unit: seconds.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "HealthCheckConnectPort",
      "description": "The port that is used for health checks. Valid values: **1** to **65535**. If you leave this parameter empty, the port specified by BackendServerPort is used for health checks.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "HealthCheckConnectTimeout",
      "description": "The timeout period of a health check response. If a backend server does not respond within the specified timeout period, the server fails to pass the health check.\n\n*   Default value: 5.\n*   Valid values: **1** to **300**.\n*   Unit: seconds.\n\n>  If the value that you specified for HealthCheckConnectTimeout is smaller than the value of HealthCheckInterval, HealthCheckConnectTimeout becomes invalid and the timeout period that you specified for HealthCheckInterval is used.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "HealthCheckDomain",
      "description": "The domain name that you want to use for health checks.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "HealthCheckHttpCode",
      "description": "The HTTP status code for a successful health check. Valid values:\n\n*   **http\\_2xx** (default)\n*   **http\\_3xx**.\n*   **http\\_4xx**\n*   **http\\_5xx**",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "HealthCheckInterval",
      "description": "The interval at which health checks are performed. Valid values: **1** to **50**. Unit: seconds.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "HealthCheckType",
      "description": "The type of health checks. Valid values:\n\n*   **tcp** (default)\n*   **http**",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "HealthCheckURI",
      "description": "The Uniform Resource Identifier (URI) that you want to use for health checks. The URI must be **1** to **80** characters in length.\n\n>  The URL must start with `/` and contain characters other than `/`.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "HealthyThreshold",
      "description": "The number of consecutive successful health checks that must occur before an unhealthy and inaccessible backend server is declared healthy and accessible. Valid values: **2** to **10**.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "ListenerPort",
      "description": "The frontend port that is used by the ELB instance. Valid values: **1** to **65535**.",
      "position": "Query",
      "type": "Integer",
      "required": true
    },
    {
      "name": "LoadBalancerId",
      "description": "The ID of the Edge Load Balancer (ELB) instance.",
      "position": "Query",
      "type": "String",
      "required": true
    },
    {
      "name": "PersistenceTimeout",
      "description": "The timeout period of session persistence.\n\n*   Default value: 0. If the default value is used, the system disables session persistence.\n*   Valid values: **0** to **3600**.\n*   Unit: seconds.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "Scheduler",
      "description": "The routing algorithm. Valid values:\n\n*   **wrr**: Backend servers with higher weights receive more requests than those with lower weights.\n*   **wlc**: Requests are distributed based on the weight and load of each backend server. The load refers to the number of connections to a backend server. If two backend servers have the same weight, the backend server that has fewer connections receives more requests.\n*   **rr**: Requests are distributed to backend servers in sequence.\n*   **sch**: consistent hashing that is based on source IP addresses. Requests from the same source IP address are distributed to the same backend server.\n*   **qch**: consistent hashing that is based on QUIC connection IDs. Requests that contain the same QUIC connection ID are distributed to the same backend server.\n*   **iqch**: consistent hashing that is based on specific three bytes of the iQUIC CIDs. Requests whose second to fourth bytes are the same are distributed to the same backend server.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "UnhealthyThreshold",
      "description": "The number of consecutive failed health checks that must occur before a healthy and accessible backend server is declared unhealthy and inaccessible. Valid values: **2** to **10**.",
      "position": "Query",
      "type": "Integer",
      "required": false
    }
  ]
}