{
  "name": "CreateServerGroup",
  "deprecated": false,
  "protocol": "HTTP|HTTPS",
  "method": "GET|POST",
  "pathPattern": "",
  "parameters": [
    {
      "name": "ClientToken",
      "description": "The client token that is used to ensure the idempotence of the request.\n\nYou can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.\n\n> If you do not specify this parameter, the system automatically uses the **request ID** as the **client token**. The **request ID** may be different for each request.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "DryRun",
      "description": "Specifies whether to perform only a dry run, without performing the actual request. Valid values:\n\n*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error code is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.\n*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.",
      "position": "Query",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "HealthCheckConfig",
      "description": "The configuration of health checks.",
      "position": "Query",
      "type": "Struct",
      "required": true
    },
    {
      "name": "Protocol",
      "description": "The backend protocol. Valid values:\n\n*   **HTTP** (default): The server group can be associated with HTTPS, HTTP, and QUIC listeners.\n*   **HTTPS**: The server group can be associated with HTTPS listeners.\n*   **gRPC**: The server group can be associated with HTTPS and QUIC listeners.\n\n> If the **ServerGroupType** parameter is set to **Fc**, you can set Protocol only to **HTTP**.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "ResourceGroupId",
      "description": "The ID of the resource group.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "Scheduler",
      "description": "The scheduling algorithm. Valid values:\n\n*   **Wrr** (default): The weighted round-robin algorithm is used. Backend servers that have higher weights receive more requests than those that have lower weights.\n*   **Wlc**: The weighted least connections algorithm is used. Requests are distributed based on the weights and the number of connections to backend servers. If two backend servers have the same weight, the backend server that has fewer connections is expected to receive more requests.\n*   **Sch**: The consistent hashing algorithm is used. Requests from the same source IP address are distributed to the same backend server.\n\n> This parameter takes effect when the **ServerGroupType** parameter is set to **Instance** or **Ip**.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "ServerGroupName",
      "description": "The name of the server group. The name must be 2 to 128 characters in length, and can contain letters, digits, periods (.), underscores (\\_), and hyphens (-). The name must start with a letter.",
      "position": "Query",
      "type": "String",
      "required": true
    },
    {
      "name": "ServerGroupType",
      "description": "The type of server group. Valid values:\n\n*   **Instance** (default): allows you to add servers by specifying **Ecs**, **Ens**, or **Eci**.\n*   **Ip**: allows you to add servers by specifying IP addresses.\n*   **Fc**: allows you to add servers by specifying functions of Function Compute.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "ServiceName",
      "description": "This parameter is available only if the ALB Ingress controller is used. In this case, set this parameter to the name of the `Kubernetes Service` that is associated with the server group.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "StickySessionConfig",
      "description": "The configuration of session persistence.\n\n> This parameter takes effect when the **ServerGroupType** parameter is set to **Instance** or **Ip**.",
      "position": "Query",
      "type": "Struct",
      "required": false
    },
    {
      "name": "Tag",
      "description": "The tag.",
      "position": "Query",
      "type": "Array",
      "required": false
    },
    {
      "name": "UchConfig",
      "description": "The configuration of consistent hashing based on URLs.",
      "position": "Query",
      "type": "Struct",
      "required": false
    },
    {
      "name": "UpstreamKeepaliveEnabled",
      "description": "Specifies whether to enable persistent TCP connections.",
      "position": "Query",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "VpcId",
      "description": "The ID of the virtual private cloud (VPC). You can add only backend servers that are deployed in the specified VPC to the server group.\n\n> This parameter takes effect when the **ServerGroupType** parameter is set to **Instance** or **Ip**.",
      "position": "Query",
      "type": "String",
      "required": false
    }
  ]
}