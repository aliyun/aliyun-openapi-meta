{
  "name": "UpdateServerGroupAttribute",
  "deprecated": false,
  "protocol": "HTTP|HTTPS",
  "method": "GET|POST",
  "pathPattern": "",
  "parameters": [
    {
      "name": "ClientToken",
      "description": "The client token that is used to ensure the idempotence of the request.\n\nYou can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.\n\n> If you do not specify this parameter, the system automatically uses the request ID as the client token. The request ID may be different for each request.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "DryRun",
      "description": "Specifies whether to perform only a dry run, without performing the actual request. Valid values:\n\n*   **true**: checks the request without performing the operation. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error code is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.\n*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a `2xx` HTTP status code is returned and the operation is performed.",
      "position": "Query",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "HealthCheckConfig",
      "description": "The configuration of health checks.",
      "position": "Query",
      "type": "Struct",
      "required": false
    },
    {
      "name": "Scheduler",
      "description": "The scheduling algorithm. Valid values:\n\n*   **Wrr**: the weighted round robin algorithm. Backend servers that have higher weights receive more requests than those that have lower weights.\n*   **Wlc**: the weighted least connections algorithm. Requests are distributed based on the weights and the number of connections to backend servers. If two backend servers have the same weight, the backend server that has fewer connections is expected to receive more requests.\n*   **Sch**: the consistent hashing algorithm. Requests from the same source IP address are distributed to the same backend server.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "ServerGroupId",
      "description": "The server group ID.",
      "position": "Query",
      "type": "String",
      "required": true
    },
    {
      "name": "ServerGroupName",
      "description": "The server group name.\n\nThe name must be 2 to 128 characters in length and can contain letters, digits, periods (.), underscores (\\_), and hyphens (-). The name must start with a letter.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "ServiceName",
      "description": "This parameter is available only if the ALB Ingress controller is used. In this case, set this parameter to the name of the `Kubernetes Service` that is associated with the server group.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "StickySessionConfig",
      "description": "The configuration of session persistence.",
      "position": "Query",
      "type": "Struct",
      "required": false
    },
    {
      "name": "UchConfig",
      "description": "The setting of consistent hashing based on URLs.",
      "position": "Query",
      "type": "Struct",
      "required": false
    },
    {
      "name": "UpstreamKeepaliveEnabled",
      "description": "Specifies whether to enable persistent TCP connections.",
      "position": "Query",
      "type": "Boolean",
      "required": false
    }
  ]
}