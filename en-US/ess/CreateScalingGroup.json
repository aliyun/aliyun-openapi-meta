{
  "name": "CreateScalingGroup",
  "deprecated": false,
  "protocol": "HTTP|HTTPS",
  "method": "GET|POST",
  "pathPattern": "",
  "parameters": [
    {
      "name": "AlbServerGroup",
      "description": "Details of the Application Load Balancer (ALB) server groups that you want to associate with the scaling group.",
      "position": "Query",
      "type": "RepeatList",
      "required": false,
      "sub_parameters": [
        {
          "name": "AlbServerGroupId",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "Port",
          "position": "Query",
          "type": "Integer",
          "required": false
        },
        {
          "name": "Weight",
          "position": "Query",
          "type": "Integer",
          "required": false
        }
      ]
    },
    {
      "name": "AllocationStrategy",
      "description": "The allocation policy of instances. Auto Scaling selects instance types based on the allocation policy to create the required number of instances. The policy can be applied to pay-as-you-go instances and preemptible instances. This parameter is available only if you set the `MultiAZPolicy` parameter to `COMPOSABLE`. Valid values:\n\n*   priority: Auto Scaling selects instance types based on the specified orders of the instance types to create the required number of instances.\n*   lowestPrice: Auto Scaling selects instance types that have the lowest unit price of vCPUs to create the required number of instances.\n\nDefault value: priority.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "AzBalance",
      "description": "Specifies whether to evenly distribute instances in the scaling group across multiple zones. This parameter is available only if you set the `MultiAZPolicy` parameter to `COMPOSABLE`. Valid values:\n\n*   true\n*   false\n\nDefault value: false.",
      "position": "Query",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "ClientToken",
      "description": "The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "CompensateWithOnDemand",
      "description": "Specifies whether to automatically create pay-as-you-go instances to meet the requirement on the number of ECS instances when the expected capacity of preemptible instances cannot be provided due to reasons such as cost-related issues and insufficient resources. This parameter is available only if you set the `MultiAZPolicy` parameter to `COST_OPTIMIZED`. Valid values:\n\n*   true\n*   false\n\nDefault value: true.",
      "position": "Query",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "ContainerGroupId",
      "description": "The ID of the elastic container instance.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "CustomPolicyARN",
      "description": "The Alibaba Cloud Resource Name (ARN) of the custom scale-in policy (Function). This parameter is available only if you specify **CustomPolicy **as the value of the **RemovalPolicy.1** parameter.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "DBInstanceIds",
      "description": "The IDs of the ApsaraDB RDS instances that you want to associate with the scaling group. The value can be a JSON array that contains multiple ApsaraDB RDS instance IDs. Separate multiple IDs with commas (,).\n\nYou can associate only a limited number of ApsaraDB RDS instances with a scaling group. Go to [Quota Center](https://quotas.console.aliyun.com/products/ess/quotas) to check the maximum number of ApsaraDB RDS instances that you can associate with a scaling group.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "DefaultCooldown",
      "description": "The cooldown period after a scaling activity is complete. Valid values: 0 to 86400. Unit: seconds.\n\nDuring the cooldown period, Auto Scaling executes only scaling activities that are triggered by CloudMonitor event-triggered tasks.\n\nDefault value: 300.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "DesiredCapacity",
      "description": "The expected number of ECS instances in the scaling group. Auto Scaling automatically maintains the expected number of ECS instances. The expected number cannot be greater than the value of the **MaxSize **parameter and cannot be less than the value of the **MinSize **parameter.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "GroupDeletionProtection",
      "description": "Specifies whether to enable deletion protection for the scaling group. Valid values:\n\n*   true: enables deletion protection for the scaling group. This way, the scaling group cannot be deleted.\n*   false: disables deletion protection for the scaling group.\n\nDefault value: false.",
      "position": "Query",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "GroupType",
      "description": "The type of the instances that are managed by the scaling group. Valid values:\n\n*   ECS: ECS instances\n*   ECI: elastic container instances\n\nDefault value: ECS.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "HealthCheckType",
      "description": "The health check mode of the scaling group. Valid values:\n\n*   NONE: Auto Scaling does not perform health checks on instances in the scaling group.\n*   ECS: Auto Scaling performs health checks on ECS instances in the scaling group.\n\nDefault value: ECS.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "InstanceId",
      "description": "The ID of an existing ECS instance that provides instance configurations for Auto Scaling to create a scaling configuration.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "LaunchTemplateId",
      "description": "The ID of the launch template that provides instance configurations for Auto Scaling to create instances.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "LaunchTemplateOverride",
      "description": "Details of the instance types that you specify by using the Extended Configurations feature of the launch template.",
      "position": "Query",
      "type": "RepeatList",
      "required": false,
      "sub_parameters": [
        {
          "name": "InstanceType",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "SpotPriceLimit",
          "position": "Query",
          "type": "Float",
          "required": false
        },
        {
          "name": "WeightedCapacity",
          "position": "Query",
          "type": "Integer",
          "required": false
        }
      ]
    },
    {
      "name": "LaunchTemplateVersion",
      "description": "The version number of the launch template. Valid values:\n\n*   A fixed template version number.\n*   Default: the default template version.\n*   Latest: the latest template version.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "LifecycleHook",
      "description": "The lifecycle hooks.",
      "position": "Query",
      "type": "RepeatList",
      "required": false,
      "sub_parameters": [
        {
          "name": "DefaultResult",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "HeartbeatTimeout",
          "position": "Query",
          "type": "Integer",
          "required": false
        },
        {
          "name": "LifecycleHookName",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "LifecycleTransition",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "NotificationArn",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "NotificationMetadata",
          "position": "Query",
          "type": "String",
          "required": false
        }
      ]
    },
    {
      "name": "LoadBalancerConfig",
      "description": "LoadBalancerConfig",
      "position": "Query",
      "type": "RepeatList",
      "required": false,
      "sub_parameters": [
        {
          "name": "LoadBalancerId",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "Weight",
          "position": "Query",
          "type": "Integer",
          "required": false
        }
      ]
    },
    {
      "name": "LoadBalancerIds",
      "description": "The IDs of the CLB instances that you want to associate with the scaling group. The value can be a JSON array that contains multiple CLB instance IDs. Separate multiple IDs with commas (,).\n\nYou can associate only a limited number of CLB instances with a scaling group. Go to [Quota Center](https://quotas.console.aliyun.com/products/ess/quotas) to check the maximum number of CLB instances that you can associate with a scaling group.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "MaxInstanceLifetime",
      "description": "The maximum life span of an instance in the scaling group. Unit: seconds.\n\nValid values: 86400 to the value of the `Integer.maxValue` parameter.\n\nDefault value: null.\n\n>  You cannot specify this parameter for scaling groups that manage elastic container instances or scaling groups whose ScalingPolicy parameter is set to recycle.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "MaxSize",
      "description": "The maximum number of ECS instances that can be contained in the scaling group. If the number of ECS instances in the scaling group is greater than the value of the `MaxSize` parameter, Auto Scaling automatically removes ECS instances until the number of instances in the scaling group is equal to the maximum number.\n\nThe value range of the **MaxSize** parameter varies based on the instance quota. You can go to [Quota Center](https://quotas.console.aliyun.com/products/ess/quotas) to check the maximum number of instances that a scaling group can contain.\n\nFor example, if a scaling group can contain up to 2,000 instances, the value range of the `MaxSize` parameter is 0 to 2000.",
      "position": "Query",
      "type": "Integer",
      "required": true
    },
    {
      "name": "MinSize",
      "description": "The minimum number of ECS instances that must be contained in the scaling group. If the number of ECS instances in the scaling group is less than the value of the `MinSize` parameter, Auto Scaling automatically creates ECS instances until the number of instances in the scaling group is equal to the minimum number.\n\n>  The value of the `MinSize` parameter must be less than or equal to the value of the `MaxSize` parameter.",
      "position": "Query",
      "type": "Integer",
      "required": true
    },
    {
      "name": "MultiAZPolicy",
      "description": "The scaling policy for the multi-zone scaling group that contains ECS instances. Valid values:\n\n*   PRIORITY: Auto Scaling scales ECS instances based on the priority of the vSwitch that is specified by the **VSwitchIds.N** parameter. Auto Scaling preferentially scales instances in the zone where the vSwitch that has the highest priority resides. If the scaling fails, Auto Scaling scales instances in the zone where the vSwitch that has the next highest priority resides.\n\n*   COST_OPTIMIZED: Auto Scaling preferentially creates ECS instances whose vCPUs are provided at the lowest price and removes ECS instances whose vCPUs are provided at the highest price. If preemptible instance types are specified in the scaling configuration, Auto Scaling preferentially creates preemptible instances. You can use the **CompensateWithOnDemand **parameter to specify whether to automatically create pay-as-you-go instances when preemptible instances cannot be created due to insufficient resources.\n\n    **\n\n    **Note** The **COST_OPTIMIZED **setting takes effect only when you specify multiple instance types or when you specify at least one preemptible instance type.\n\n*   BALANCE: Auto Scaling evenly distributes ECS instances across zones that are specified for the scaling group. If ECS instances are unevenly distributed across zones due to insufficient resources, you can call the [RebalanceInstance](~~71516~~) operation to evenly distribute the instances across the zones.\n\n*   COMPOSABLE: You can combine the preceding policies based on your business requirements.\n\nDefault value: PRIORITY.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "OnDemandBaseCapacity",
      "description": "The minimum number of pay-as-you-go instances that must be contained in the scaling group. Valid values: 0 to 1000. If the number of pay-as-you-go instances is less than the value of this parameter, Auto Scaling preferentially creates pay-as-you-go instances.\n\nIf you set the `MultiAZPolicy` parameter to `COMPOSABLE` Policy, the default value of this parameter is 0.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "OnDemandPercentageAboveBaseCapacity",
      "description": "The percentage of pay-as-you-go instances in the excess instances when the minimum number of pay-as-you-go instances reaches the requirement. Valid values: 0 to 100.\n\nIf you set the `MultiAZPolicy` parameter to `COMPOSABLE` Policy, the default value of this parameter is 100.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "RegionId",
      "description": "The region ID of the scaling group. For more information, see the [Regions and zones](~~40654~~) topic.",
      "position": "Query",
      "type": "String",
      "required": true
    },
    {
      "name": "RemovalPolicy.1",
      "description": "The first instance removal policy. You cannot set the **RemovalPolicy.1** parameter, the **RemovalPolicy.2** parameter, and the **RemovalPolicy.3** parameter to the same value.\n\n*   OldestInstance: removes ECS instances that are added at the earliest point in time to the scaling group.\n*   NewestInstance: removes ECS instances that are most recently added to the scaling group.\n*   OldestScalingConfiguration: removes ECS instances that are created based on the earliest scaling configuration.\n*   CustomPolicy: removes ECS instances based on the custom scale-in policy (Function).\n\nThe scaling configuration source specified by the **OldestScalingConfiguration **setting can be a scaling configuration or a launch template. You can specify **CustomPolicy **only as the value of the **RemovalPolicy.1** parameter. If you set the **RemovalPolicy.1** parameter to **CustomPolicy**, you must also specify the **CustomPolicyARN **parameter.\n\n>  The removal of ECS instances from a scaling group is also affected by the value of the **MultiAZPolicy** parameter. For more information, see the [Configure a combination policy for removing instances](~~254822~~) topic.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "RemovalPolicy.2",
      "description": "The second instance removal policy. You cannot set the **RemovalPolicy.1 **parameter, the **RemovalPolicy.2** parameter, and the **RemovalPolicy.3** parameter to the same value. Valid values:\n\n*   OldestInstance: removes ECS instances that are added at the earliest point in time to the scaling group.\n*   NewestInstance: removes ECS instances that are most recently added to the scaling group.\n*   OldestScalingConfiguration: removes ECS instances that are created based on the earliest scaling configuration.\n\n>  The removal of ECS instances from a scaling group is also affected by the value of the **MultiAZPolicy **parameter. For more information, see the [Configure a combination policy for removing instances](~~254822~~) topic.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "RemovalPolicy.3",
      "description": "The third instance removal policy. You cannot set the **RemovalPolicy.1** parameter, the **RemovalPolicy.2** parameter, and the **RemovalPolicy.3** parameter to the same value. Valid values:\n\n*   OldestInstance: removes ECS instances that are added at the earliest point in time to the scaling group.\n*   NewestInstance: removes ECS instances that are most recently added to the scaling group.\n*   OldestScalingConfiguration: removes ECS instances that are created based on the earliest scaling configuration.\n\n>  The removal of ECS instances from a scaling group is also affected by the value of the **MultiAZPolicy **parameter. For more information, see the [Configure a combination policy for removing instances](~~254822~~) topic.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "ResourceGroupId",
      "description": "The ID of the resource group to which you want to add the scaling group.\n\n>  If you specify this parameter, new scaling groups are added to the specified resource group. If you do not specify this parameter, new scaling groups are added to the default resource group.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "ScalingGroupName",
      "description": "The name of the scaling group. The name of each scaling group must be unique in a region. The name must be 2 to 64 characters in length, and can contain letters, digits, underscores (\\_), hyphens (-), and periods (.). The name must start with a letter or a digit.\n\nIf you do not specify this parameter, the value of the **ScalingGroupId **parameter is used.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "ScalingPolicy",
      "description": "The reclaim mode of the scaling group. Valid values:\n\n*   recycle: economical mode\n*   release: release mode\n\n**ScalingPolicy **specifies the reclaim mode of scaling groups. The policy that is used to remove ECS instances from scaling groups is specified by the **RemovePolicy **parameter of the **RemoveInstances **operation. For more information, see the [RemoveInstances](~~25955~~) topic.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "ServerGroup",
      "description": "Details of the server groups.\n\n>You cannot use the AlbServerGroups parameter and the ServerGroups parameter to specify the same server group.",
      "position": "Query",
      "type": "RepeatList",
      "required": false,
      "sub_parameters": [
        {
          "name": "Port",
          "position": "Query",
          "type": "Integer",
          "required": false
        },
        {
          "name": "ServerGroupId",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "Type",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "Weight",
          "position": "Query",
          "type": "Integer",
          "required": false
        }
      ]
    },
    {
      "name": "SpotAllocationStrategy",
      "description": "The allocation policy of preemptible instances. You can use this parameter to individually specify the allocation policy of preemptible instances. This parameter is available only if you set the `MultiAZPolicy` parameter to `COMPOSABLE`. Valid values:\n\n*   priority: Auto Scaling selects instance types based on the specified orders of the instance types to create the required number of preemptible instances.\n*   lowestPrice: Auto Scaling selects instance types that have the lowest unit price of vCPUs to create the required number of preemptible instances.\n\nDefault value: priority.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "SpotInstancePools",
      "description": "The number of instance types that you want to specify. Auto Scaling evenly creates preemptible instances of multiple instance types that are provided at the lowest price in the scaling group. Valid values: 1 to 10.\n\nIf you set the `MultiAZPolicy` parameter to `COMPOSABLE`, the default value of this parameter is 2.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "SpotInstanceRemedy",
      "description": "Specifies whether to supplement preemptible instances. If you set this parameter to true, Auto Scaling creates an instance to replace a preemptible instance when Auto Scaling receives a system message which indicates that the preemptible instance is to be reclaimed.",
      "position": "Query",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "Tag",
      "description": "Details of the tags that you want to add to the scaling group.",
      "position": "Query",
      "type": "RepeatList",
      "required": false,
      "sub_parameters": [
        {
          "name": "Key",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "Propagate",
          "position": "Query",
          "type": "Boolean",
          "required": false
        },
        {
          "name": "Value",
          "position": "Query",
          "type": "String",
          "required": false
        }
      ]
    },
    {
      "name": "VServerGroup",
      "description": "Details of the backend vServer groups that you want to associate with the scaling group.",
      "position": "Query",
      "type": "RepeatList",
      "required": false,
      "sub_parameters": [
        {
          "name": "LoadBalancerId",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "VServerGroupAttribute",
          "position": "Query",
          "type": "RepeatList",
          "required": false
        }
      ]
    },
    {
      "name": "VSwitchId",
      "description": "The ID of the vSwitch. If you specify the **VSwitchId **parameter, the network type of the scaling group is VPC.\n\n>  If you do not specify the **VSwitchId **or **VSwitchIds.N** parameter, the network type of the scaling group is classic network.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "VSwitchIds",
      "description": "The IDs of vSwitches. If you specify the **VSwitchIds.N** parameter, the **VSwitchId **parameter is ignored. If you specify the **VSwitchIds.N** parameter, the network type of the scaling group is VPC.\n\nIf you specify multiple vSwitches, take note of the following items:\n\n*   The vSwitches must belong to the same VPC.\n*   The vSwitches can belong to different zones.\n*   The vSwitches are sorted in ascending order of priority. The first vSwitch that is specified by the **VSwitchIds.N** parameter has the highest priority. If Auto Scaling fails to create ECS instances in the zone where the vSwitch that has the highest priority resides, Auto Scaling creates ECS instances in the zone where the vSwitch that has the next highest priority resides.\n\n>  If you do not specify the **VSwitchId **or **VSwitchIds.N** parameter, the network type of the scaling group is classic network.",
      "position": "Query",
      "type": "RepeatList",
      "required": false
    }
  ]
}