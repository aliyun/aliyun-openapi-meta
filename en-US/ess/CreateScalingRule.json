{
  "name": "CreateScalingRule",
  "deprecated": false,
  "protocol": "HTTP|HTTPS",
  "method": "GET|POST",
  "pathPattern": "",
  "parameters": [
    {
      "name": "AdjustmentType",
      "description": "The adjustment method of the scaling rule. If you set **ScalingRuleType** to **SimpleScalingRule** or **StepScalingRule**, you must specify this parameter. Valid values:\n\n*   QuantityChangeInCapacity: adds the specified number of ECS instances to or removes the specified number of ECS instances from the scaling group.\n*   PercentChangeInCapacity: adds the specified percentage of ECS instances to or removes the specified percentage of ECS instances from the scaling group.\n*   TotalCapacity: adjusts the number of ECS instances in the scaling group to a specified number.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "AdjustmentValue",
      "description": "The number of instances that must be scaled based on the scaling rule. If you set **ScalingRuleType** to **SimpleScalingRule** or **StepScalingRule**, you must specify this parameter. The number of ECS instances that must be scaled in a scaling activity cannot exceed 1,000. Valid values of **AdjustmentValue** vary based on the value of **AdjustmentTyp****e**.\n\n*   Valid values if **AdjustmentType** is set to **QuantityChangeInCapacity**: -1000 to 1000.\n*   Valid values if **AdjustmentType** is set to **PercentChangeInCapacity**: -100 to 10000.\n*   Valid values if **AdjustmentType** is set to **TotalCapacity**: 0 to 2000.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "AlarmDimension",
      "description": "The dimension information associated with the item is applicable to the target tracking rule and is set when the item requires additional dimension information, for example, the `LoadBalancerRealServerAverageQps` item needs to specify the `rulePool` dimension information.",
      "position": "Query",
      "type": "RepeatList",
      "required": false,
      "sub_parameters": [
        {
          "name": "DimensionKey",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "DimensionValue",
          "position": "Query",
          "type": "String",
          "required": false
        }
      ]
    },
    {
      "name": "Cooldown",
      "description": "The cooldown period of the scaling rule. This parameter is available only if you set **ScalingRuleType** to **SimpleScalingRule**. Valid values: 0 to 86400. Unit: seconds.\n\nYou can leave this parameter empty.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "DisableScaleIn",
      "description": "Specifies whether to disable scale-in. This parameter is available if you set **ScalingRuleType** to **TargetTrackingScalingRule**.\n\nDefault value: false",
      "position": "Query",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "EstimatedInstanceWarmup",
      "description": "The warmup period of an ECS instance. This parameter is available only if you set **ScalingRuleType** to **TargetTrackingScalingRule** or **PredictiveScalingRule**. Auto Scaling adds ECS instances that are in the Warmup state to a scaling group, but does not report monitoring data of the ECS instances to CloudMonitor during the warmup period.\n\n>  When Auto Scaling calculates the number of ECS instances that must be scaled, ECS instances in the Warmup state are not counted toward the current capacity of the scaling group.\n\nValid values: 0 to 86400. Unit: seconds.\n\nDefault value: 300",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "InitialMaxSize",
      "description": "The maximum number of ECS instances that can be added to the scaling group. If you specify **InitialMaxSize**, you must also specify **PredictiveValueBehavior**.\n\nThe default value of this parameter is the value of **MaxSize**.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "MetricName",
      "description": "The predefined metric of the scaling rule. If you set **ScalingRuleType** to **TargetTrackingScalingRule** or **PredictiveScalingRule**, you must also specify this parameter.\n\nValid values if **ScalingRuleType** is set to **TargetTrackingScalingRule**:\n\n*   CpuUtilization: the average CPU utilization\n*   ClassicInternetRx: the average inbound Internet traffic over the classic network\n*   ClassicInternetTx: the average outbound Internet traffic over the classic network\n*   VpcInternetRx: the average inbound Internet traffic over a virtual private cloud (VPC)\n*   VpcInternetTx: the average outbound Internet traffic over a VPC\n*   IntranetRx: the average inbound traffic over the internal network\n*   IntranetTx: the average outbound traffic over the internal network\n\nValid values if **ScalingRuleType** is set to **PredictiveScalingRule**:\n\n*   CpuUtilization: the average CPU utilization\n*   IntranetRx: the average inbound traffic over the internal network\n*   IntranetTx: the average outbound traffic over the internal network",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "MinAdjustmentMagnitude",
      "description": "The minimum number of instances that must be scaled. This parameter takes effect if you set `ScalingRuleType` to `SimpleScalingRule` or `StepScalingRule`, and `AdjustmentType` to **PercentChangeInCapacity**.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "PredictiveScalingMode",
      "description": "The mode of the predictive scaling rule. Valid values:\n\n*   PredictAndScale: provides predictions and creates prediction tasks.\n*   PredictOnly: provides predictions but does not create prediction tasks.\n\nDefault value: PredictAndScale",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "PredictiveTaskBufferTime",
      "description": "The amount of buffer time before the prediction task runs. By default, all prediction tasks that are automatically created by a predictive scaling rule run on the hour. You can specify a buffer time to run prediction tasks and prepare resources in advance. Valid values: 0 to 60. Unit: minutes.\n\nDefault value: 0",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "PredictiveValueBehavior",
      "description": "The action on the predicted maximum value. Valid values:\n\n*   MaxOverridePredictiveValue: uses the initial maximum capacity as the maximum value for prediction tasks if the predicted value is greater than the initial maximum capacity.\n*   PredictiveValueOverrideMax: uses the predicted value as the maximum value for prediction tasks if the predicted value is greater than the initial maximum capacity.\n*   PredictiveValueOverrideMaxWithBuffer: increases the predicted value by a ratio that is specified by **PredictiveValueBuffer**, and uses the increased value as the maximum value for prediction tasks if the predicted value increased by the ratio is greater than the initial maximum capacity.\n\nDefault value: MaxOverridePredictiveValue",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "PredictiveValueBuffer",
      "description": "The ratio based on which the predicted value is increased if you set **PredictiveValueBehavior** to **PredictiveValueOverrideMaxWithBuffer**. If the predicted value increased by this ratio is greater than the initial maximum capacity, the increased value is used as the maximum value for prediction tasks. Valid values: 0 to 100.\n\nDefault value: 0",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "RegionId",
      "description": "The region ID of the scaling group.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "ScaleInEvaluationCount",
      "description": "The number of consecutive times that the event-triggered task created for scale-ins must meet the threshold conditions before an alert is triggered. After a target tracking scaling rule is created, an event-triggered task is automatically created and associated with the target tracking scaling rule.\n\nDefault value: 15",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "ScaleOutEvaluationCount",
      "description": "The number of consecutive times that the event-triggered task created for scale-outs must meet the threshold conditions before an alert is triggered. After a target tracking scaling rule is created, an event-triggered task is automatically created and associated with the target tracking scaling rule.\n\nDefault value: 3",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "ScalingGroupId",
      "description": "The ID of the scaling group for which you want to create the scaling rule.",
      "position": "Query",
      "type": "String",
      "required": true
    },
    {
      "name": "ScalingRuleName",
      "description": "The name of the scaling rule. The name must be 2 to 64 characters in length, and can contain letters, digits, underscores (\\_), hyphens (-), and periods (.). The name must start with a letter or a digit.\n\nThe name of a scaling rule must be unique within an Alibaba Cloud account in a region.\n\n>  If you leave this parameter empty, the scaling rule ID is used.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "ScalingRuleType",
      "description": "The type of the scaling rule. Valid values:\n\n*   SimpleScalingRule: scales the number of ECS instances based on the values of **AdjustmentType** and **AdjustmentValue**.\n*   TargetTrackingScalingRule: calculates the number of ECS instances that must be scaled and maintains the value of a predefined metric close to the value of **TargetValue**.\n*   StepScalingRule: scales ECS instances in steps based on the specified thresholds and metric values.\n*   PredictiveScalingRule: uses machine learning to analyze historical monitoring data of the scaling group and predicts the future values of metrics. In addition, Auto Scaling automatically creates scheduled tasks to specify the value range for the scaling group.\n\nDefault value: SimpleScalingRule",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "StepAdjustment",
      "description": "Details of the step adjustments.",
      "position": "Query",
      "type": "RepeatList",
      "required": false,
      "sub_parameters": [
        {
          "name": "MetricIntervalLowerBound",
          "position": "Query",
          "type": "Float",
          "required": false
        },
        {
          "name": "MetricIntervalUpperBound",
          "position": "Query",
          "type": "Float",
          "required": false
        },
        {
          "name": "ScalingAdjustment",
          "position": "Query",
          "type": "Integer",
          "required": false
        }
      ]
    },
    {
      "name": "TargetValue",
      "description": "The target value. If you set **ScalingRuleType** to **TargetTrackingScalingRule** or **PredictiveScalingRule**, you must also specify this parameter. The value must be greater than 0 and can contain up to three decimal places.",
      "position": "Query",
      "type": "Float",
      "required": false
    }
  ]
}