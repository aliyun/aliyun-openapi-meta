{
  "name": "ModifyScalingGroup",
  "deprecated": false,
  "protocol": "HTTP|HTTPS",
  "method": "GET|POST",
  "pathPattern": "",
  "parameters": [
    {
      "name": "ActiveScalingConfigurationId",
      "description": "The ID of the active scaling configuration in the scaling group.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "AllocationStrategy",
      "description": "The allocation policy of instances. Auto Scaling selects instance types based on the allocation policy to create instances. The policy can be applied to pay-as-you-go instances and preemptible instances. This parameter is available only if you set the `MultiAZPolicy` parameter to `COMPOSABLE`. Valid values:\n\n*   priority: Auto Scaling selects instance types based on the specified orders of the instance types to create instances.\n*   lowestPrice: Auto Scaling selects instance types that have the lowest unit price of vCPU to create instances.\n\nDefault value: priority.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "AzBalance",
      "description": "Specifies whether to evenly distribute instances in the scaling group across multiple zones. This parameter is available only if you set the `MultiAZPolicy` parameter to `COMPOSABLE`. Valid values:\n\n*   true\n*   false\n\nDefault value: false.",
      "position": "Query",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "CompensateWithOnDemand",
      "description": "Specifies whether to automatically create pay-as-you-go instances to meet the requirement on the number of ECS instances in the scaling group when the number of preemptible instances cannot be reached due to reasons such as costs and insufficient resources. This parameter takes effect only if you set the MultiAZPolicy parameter in the CreateScalingGroup operation to COST_OPTIMIZED. Valid values:\n\n*   true\n*   false",
      "position": "Query",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "CustomPolicyARN",
      "description": "The Alibaba Cloud Resource Name (ARN) of the custom scale-in policy (Function). This parameter is available only if you specify CustomPolicy as the first step of the instance removal policy.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "DefaultCooldown",
      "description": "The cooldown time of the scaling group after a scaling activity is triggered. Valid values: 0 to 86400. Unit: seconds.\n\nDuring the cooldown time, Auto Scaling executes only scaling activities that are triggered by event-triggered tasks monitored by CloudMonitor.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "DesiredCapacity",
      "description": "The expected number of ECS instances in the scaling group. Auto Scaling automatically maintains the expected number of ECS instances that you specify. The expected number cannot be greater than the value of the MaxSize parameter and cannot be less than the value of the MinSize parameter.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "DisableDesiredCapacity",
      "description": "",
      "position": "Query",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "GroupDeletionProtection",
      "description": "Specifies whether to enable deletion protection for the scaling group. Valid values:\n\n*   true: enables deletion protection for the scaling group. This way, the scaling group cannot be deleted.\n*   false: disables deletion protection for the scaling group.",
      "position": "Query",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "HealthCheckType",
      "description": "The health check mode of the scaling group. Valid values:\n\n*   NONE: Auto Scaling does not perform health checks on instances in the scaling group.\n*   ECS: Auto Scaling performs health checks on ECS instances in the scaling group.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "LaunchTemplateId",
      "description": "The ID of the launch template that is used by Auto Scaling to create instances.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "LaunchTemplateOverride",
      "description": "Details of the instance types that are specified in the extended configurations of the launch template.",
      "position": "Query",
      "type": "RepeatList",
      "required": false,
      "sub_parameters": [
        {
          "name": "InstanceType",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "SpotPriceLimit",
          "position": "Query",
          "type": "Float",
          "required": false
        },
        {
          "name": "WeightedCapacity",
          "position": "Query",
          "type": "Integer",
          "required": false
        }
      ]
    },
    {
      "name": "LaunchTemplateVersion",
      "description": "The version number of the launch template. Valid values:\n\n*   A fixed template version number.\n*   Default: the default template version.\n*   Latest: the latest template version.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "MaxInstanceLifetime",
      "description": "The maximum life span of the instance in the scaling group. Unit: seconds.\n\nValid values: 86400 to `Integer.maxValue`. You can also set this parameter to 0. If you set this parameter to 0, the instance has an unlimited life span.\n\nDefault value: null.\n\n>  You cannot specify this parameter for scaling groups that contain elastic container instances or scaling groups whose ScalingPolicy is set to recycle.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "MaxSize",
      "description": "The maximum number of ECS instances in the scaling group. When the number of ECS instances in the scaling group is greater than the value of the MaxSize parameter, Auto Scaling automatically removes ECS instances from the scaling group until the number of instances is equal to the value of the `MaxSize` parameter.\n\nThe value range of the MaxSize parameter varies based on the instance quota. You can go to [Quota Center](https://quotas.console.aliyun.com/products/ess/quotas) to check the quota of instances that can be added to a scaling group.****\n\nFor example, if the quota of instances that can be added to a scaling group is 2,000, the valid values of the `MaxSize` parameter range from 0 to 2000.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "MinSize",
      "description": "The minimum number of ECS instances in the scaling group. When the number of ECS instances in the scaling group is less than the value of the MinSize parameter, Auto Scaling automatically adds ECS instances until the number of instances is equal to the value of the `MinSize` parameter.\n\n>  The value of the `MinSize` parameter must be less than or equal to the value of the `MaxSize` parameter.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "MultiAZPolicy",
      "description": "The scaling policy for the multi-zone scaling group that contains ECS instances. Valid values:\n\n*   PRIORITY: The first vSwitch specified by using the VSwitchIds.N parameter has the highest priority. Auto Scaling scales instances in the zone where the vSwitch that has the highest priority resides. If the scaling fails, Auto Scaling scales instances in the zone where the vSwitch that has the next highest priority resides.\n\n*   COST_OPTIMIZED: Auto Scaling creates ECS instances whose vCPUs are provided at the lowest price during scale-out activities and removes ECS instances whose vCPUs are provided at the highest price during scale-in activities. If preemptible instance types are specified in the active scaling configuration, Auto Scaling preferentially creates preemptible instances. You can use the `CompensateWithOnDemand` parameter to specify whether to automatically create pay-as-you-go instances when Auto Scaling fails to create preemptible instances.\n\n    **\n\n    **Note** The COST_OPTIMIZED setting takes effect only when you specify multiple instance types or when you specify at least one preemptible instance type.\n\n*   BALANCE: Auto Scaling evenly distributes ECS instances across zones that are specified for the scaling group. If ECS instances are unevenly distributed across zones due to insufficient resources, you can call the [RebalanceInstance](~~71516~~) operation to evenly distribute the instances across the zones.\n\n*   COMPOSABLE: You can flexibly combine the preceding policies based on your business requirements.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "OnDemandBaseCapacity",
      "description": "The minimum number of pay-as-you-go instances required in the scaling group. Valid values: 0 to 1000. If the number of pay-as-you-go instances is less than the value of this parameter, Auto Scaling preferentially creates pay-as-you-go instances.\n\nIf the `MultiAZPolicy` parameter is set to `COMPOSABLE` Policy, the default value is 0.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "OnDemandPercentageAboveBaseCapacity",
      "description": "The percentage of pay-as-you-go instances among the excess instances when the requirement on the minimum number of pay-as-you-go instances is met. Valid values: 0 to 100.\n\nIf the `MultiAZPolicy` parameter is set to `COMPOSABLE` Policy, the default value is 100.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "RemovalPolicy.1",
      "description": "The first step to remove ECS instances from the scaling group. Valid values:\n\n*   OldestInstance: removes ECS instances that are added at the earliest point in time to the scaling group.\n*   NewestInstance: removes ECS instances that are most recently added to the scaling group.\n*   OldestScalingConfiguration: removes ECS instances that are created based on the earliest scaling configuration.\n*   CustomPolicy: removes ECS instances based on the custom scale-in policy (Function).\n\n>  The scaling configuration source specified by OldestScalingConfiguration can be a scaling configuration or a launch template. The CustomPolicy setting is available only for the RemovalPolicy.1 parameter. If you set the RemovalPolicy.1 parameter to CustomPolicy, you must also specify the CustomPolicyARN parameter.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "RemovalPolicy.2",
      "description": "The second step to remove ECS instances from the scaling group. Valid values:\n\n*   OldestInstance: removes ECS instances that are added at the earliest point in time to the scaling group.\n\n*   NewestInstance: removes ECS instances that are most recently added to the scaling group.\n\n*   OldestScalingConfiguration: removes ECS instances that are created based on the earliest scaling configuration.\n\n    **\n\n    **Note** The scaling configuration source specified by OldestScalingConfiguration can be a scaling configuration or a launch template.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "RemovalPolicy.3",
      "description": "The third step to remove ECS instances from the scaling group. Valid values:\n\n*   OldestInstance: removes ECS instances that are added at the earliest point in time to the scaling group.\n*   NewestInstance: removes ECS instances that are most recently added to the scaling group.\n*   OldestScalingConfiguration: removes ECS instances that are created based on the earliest scaling configuration.\n\n>  The scaling configuration source specified by OldestScalingConfiguration can be a scaling configuration or a launch template.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "ScalingGroupId",
      "description": "The ID of the scaling group that you want to modify.",
      "position": "Query",
      "type": "String",
      "required": true
    },
    {
      "name": "ScalingGroupName",
      "description": "The name of the scaling group. The name of each scaling group must be unique in a region. The name must be 2 to 64 characters in length, and can contain letters, digits, underscores (\\_), hyphens (-), and periods (.). The name must start with a letter or a digit.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "SpotAllocationStrategy",
      "description": "The allocation policy of preemptible instances. You can use this parameter to individually specify the allocation policy of preemptible instances. This parameter is available only if you set the `MultiAZPolicy` parameter to `COMPOSABLE`. Valid values:\n\n*   priority: Auto Scaling selects instance types based on the specified orders of the instance types to create preemptible instances.\n*   lowestPrice: Auto Scaling selects instance types that have the lowest unit price of vCPU to create preemptible instances.\n\nDefault value: priority.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "SpotInstancePools",
      "description": "The number of instance types that you specify. Auto Scaling creates preemptible instances of multiple instance types that are provided at the lowest price. Valid values: 0 to 10.\n\nIf the `MultiAZPolicy` parameter is set to `COMPOSABLE` Policy, the default value is 2.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "SpotInstanceRemedy",
      "description": "Specifies whether to supplement preemptible instances. If you set this parameter to true, Auto Scaling creates an instance to replace a preemptible instance when Auto Scaling receives a system message that indicates the preemptible instance is to be reclaimed.",
      "position": "Query",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "VSwitchIds",
      "description": "The IDs of vSwitches.\n\nThis parameter takes effect only when the network type of the scaling group is VPC. The specified vSwitches and the scaling group must reside in the same VPC.\n\nThe vSwitches can reside in different zones. The vSwitches are sorted in ascending order. The first vSwitch specified by using the VSwitchIds parameter has the highest priority. If Auto Scaling fails to create ECS instances in the zone where the vSwitch that has the highest priority resides, Auto Scaling creates ECS instances in the zone where the vSwitch that has the next highest priority resides.",
      "position": "Query",
      "type": "RepeatList",
      "required": false
    }
  ]
}