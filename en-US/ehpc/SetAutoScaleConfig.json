{
  "name": "SetAutoScaleConfig",
  "deprecated": false,
  "protocol": "HTTP|HTTPS",
  "method": "GET",
  "pathPattern": "",
  "parameters": [
    {
      "name": "ClusterId",
      "description": "The cluster ID.",
      "position": "Query",
      "type": "String",
      "required": true
    },
    {
      "name": "ComputeEnableHt",
      "description": "Specifies whether to enable hyper-threading for the ECS instance that is used as the compute node.\n\n>  You can only disable hyper-threading for some instance types. The hyper-threading is enabled for ECS instances by default. For more information, see [Specify and view CPU options](~~145895~~).",
      "position": "Query",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "DnsConfig",
      "description": "",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "EnableAutoGrow",
      "description": "Specifies whether to enable auto scale-out. Valid values:\n\n*   true: enables auto scale-out.\n*   false: disables auto scale-out.\n\nDefault value: false.",
      "position": "Query",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "EnableAutoShrink",
      "description": "Specifies whether to enable auto scale-in. Valid values:\n\n*   true: enables auto scale-in.\n*   false: disables auto scale-in.\n\nDefault value: false.",
      "position": "Query",
      "type": "Boolean",
      "required": false
    },
    {
      "name": "ExcludeNodes",
      "description": "The compute nodes that are excluded from auto scaling tasks. Separate multiple compute nodes with commas (,).\n\nIf you want to retain a compute node, you can specify the node as an additional node to retain the node when it is idle.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "ExtraNodesGrowRatio",
      "description": "The percentage of extra compute nodes. Valid values: 0 to 100.\n\nDefault value: 0.\n\nIf you need to add 100 compute nodes and the value of the ExtraNodesGrowRatio parameter is 2, 102 compute nodes are added.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "GrowIntervalInMinutes",
      "description": "The interval between two consecutive rounds of scale-out. Unit: minutes.\n\nValid values: 2 to 10.\n\nDefault value: 2.\n\n> An interval may exist during multiple rounds of a scale-out task or between two consecutive scale-out tasks.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "GrowRatio",
      "description": "The percentage of each round of a scale-out task. Valid values: 1 to 100.\n\nDefault value: 100.\n\nIf you set GrowRatio to 50, the scale-out has two rounds. Each round completes half of the scale-out.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "GrowTimeoutInMinutes",
      "description": "The scale-out timeout period. Unit: minutes.\n\nValid values: 10 to 60.\n\nDefault value: 20.\n\nIf the scale-out timeout period has been reached but the scale-out nodes still do not reach the Running state, the system releases them.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "ImageId",
      "description": "The IDs of the images.\n\n> \n\n*   If both `Queues.N.QueueImageId` and `ImageId` are specified, `Queues.N.QueueImageId` prevails.\n\n*   If you set `Queues.N.QueueImageId` or `ImageId`, the parameter that you set takes effect.\n*   If you leave both `Queues.N.QueueImageId` and `ImageId` empty, the image that was specified when you created the cluster or the last time you scaled out the cluster is used by default.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "MaxNodesInCluster",
      "description": "The maximum number of compute nodes that can be added to the cluster. Valid values: 0 to 500.\n\nDefault value: 100.",
      "position": "Query",
      "type": "Integer",
      "required": true
    },
    {
      "name": "Queues",
      "description": "The information about the queue.",
      "position": "Query",
      "type": "RepeatList",
      "required": false,
      "sub_parameters": [
        {
          "name": "AutoMinNodesPerCycle",
          "position": "Query",
          "type": "Boolean",
          "required": false
        },
        {
          "name": "DataDisks",
          "position": "Query",
          "type": "RepeatList",
          "required": false
        },
        {
          "name": "EnableAutoGrow",
          "position": "Query",
          "type": "Boolean",
          "required": false
        },
        {
          "name": "EnableAutoShrink",
          "position": "Query",
          "type": "Boolean",
          "required": false
        },
        {
          "name": "HostNamePrefix",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "HostNameSuffix",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "InstanceType",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "InstanceTypes",
          "position": "Query",
          "type": "RepeatList",
          "required": false
        },
        {
          "name": "MaxNodesInQueue",
          "position": "Query",
          "type": "Integer",
          "required": false
        },
        {
          "name": "MaxNodesPerCycle",
          "position": "Query",
          "type": "Long",
          "required": false
        },
        {
          "name": "MinNodesInQueue",
          "position": "Query",
          "type": "Integer",
          "required": false
        },
        {
          "name": "MinNodesPerCycle",
          "position": "Query",
          "type": "Long",
          "required": false
        },
        {
          "name": "QueueImageId",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "QueueName",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "SortedByInventory",
          "position": "Query",
          "type": "Boolean",
          "required": false
        },
        {
          "name": "SpotPriceLimit",
          "position": "Query",
          "type": "Float",
          "required": false
        },
        {
          "name": "SpotStrategy",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "SystemDiskCategory",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "SystemDiskLevel",
          "position": "Query",
          "type": "String",
          "required": false
        },
        {
          "name": "SystemDiskSize",
          "position": "Query",
          "type": "Integer",
          "required": false
        }
      ]
    },
    {
      "name": "ShrinkIdleTimes",
      "description": "The number of consecutive times that a compute node is idle during the resource scale-in check.\n\nValid values: 2 to 5.\n\nDefault value: 3.\n\nIf the parameter is set to 3, a compute node is idle more than three consecutive times. In this case, the node is released. If a compute node is idle for longer than 6 minutes continuously, it is released by default. This is because the default value of the ShrinkIntervalInMinutes parameter is 2.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "ShrinkIntervalInMinutes",
      "description": "The interval between two consecutive rounds of scale-in. Unit: minutes.\n\nValid values: 2 to 10.\n\nDefault value: 2.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "SpotPriceLimit",
      "description": "The maximum hourly price of the compute nodes. The value can be accurate to three decimal places. The parameter takes effect only when `SpotStrategy` is set to `SpotWithPriceLimit`.",
      "position": "Query",
      "type": "Float",
      "required": false
    },
    {
      "name": "SpotStrategy",
      "description": "The preemption policy of the compute nodes. Valid values:\n\n*   NoSpot: The compute nodes are pay-as-you-go instances.\n*   SpotWithPriceLimit: The compute nodes are preemptible instances that have a user-defined maximum hourly price.\n*   SpotAsPriceGo: The compute nodes are preemptible instances for which the market price at the time of purchase is used as the bid price.\n\nDefault value: NoSpot.",
      "position": "Query",
      "type": "String",
      "required": false
    }
  ]
}