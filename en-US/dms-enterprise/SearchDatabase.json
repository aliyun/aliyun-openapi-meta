{
  "name": "SearchDatabase",
  "deprecated": false,
  "protocol": "HTTP|HTTPS",
  "method": "GET|POST",
  "pathPattern": "",
  "parameters": [
    {
      "name": "DbType",
      "description": "The type of the database. For more information about the valid values of this parameter, see [DbType parameter](~~198106~~).",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "EnvType",
      "description": "The environment type of the database. For more information, see [Change the environment type of an instance](~~163309~~).",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "PageNumber",
      "description": "The number of the page to return.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "PageSize",
      "description": "The number of entries to return on each page.",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "SearchKey",
      "description": "The keyword that is used to search for databases.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "SearchRange",
      "description": "The query range based on permissions. Valid values:\n\n*   **HAS_PERMSSION**: searches for databases on which the current user has permissions.\n*   **OWNER**: searches for databases owned by the current user.\n*   **MY_FOCUS**: searches for databases that the current user follows.\n*   **UNKNOWN**: searches for all databases.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "SearchTarget",
      "description": "The category of the database. Valid values:\n\n*   **DB**: single database or logical database.\n*   **SINGLE_DB**: single database.\n*   **LOGIC_DB**: logical database.",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "Tid",
      "description": "The ID of the tenant. You can call the [GetUserActiveTenant](~~198073~~) operation to query the tenant ID.",
      "position": "Query",
      "type": "Long",
      "required": false
    }
  ]
}