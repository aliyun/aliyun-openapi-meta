{
  "name": "CreateDispatchRule",
  "deprecated": false,
  "protocol": "HTTP|HTTPS",
  "method": "GET|POST",
  "pathPattern": "",
  "parameters": [
    {
      "name": "DispatchRule",
      "description": "## Additional information about the **DispatchRule** parameter\n\n**JSON string example and description**\n\n```\n\n{\n  \"system\": false,        // Specifies whether the dispatch rule is editable. Valid values: true: not editable. false: editable. \n  \"ruleid\": 10282,           // The ID of the dispatch rule. \n  \"name\": \"Prometheus Alert\",   // The name of the dispatch policy. \n  \"labelMatchExpressionGrid\": {\n    \"labelMatchExpressionGroups\": [     // Sets the dispatch rule. \n      {\n        \"labelMatchExpressions\": [\n          {\n            \"key\": \"_aliyun_arms_involvedObject_kind\", // The key of the tag of the dispatch rule. For more information, see the next section. \n            \"value\": \"app\",                              // The value of the tag. \n            \"operator\": \"eq\"                             // The operator used in the dispatch rule. Valid values: eq: equals to. re: matches a regular expression. \n          }\n        ]\n      }\n    ]\n  },\n  \"dispatchType\": \"CREATE_ALERT/DISCARD_ALERT\",    // The alert handling method. Valid values: CREATE_ALERT: generates an alert. DISCARD_ALERT: discards the alert event and generates no alert. \n  \"isRecover\": true,               // Specifies whether to send the restored alert. Valid values: true: sends the alert. false: does not send the alert. \n  \"groupRules\": [                  // Sets the event group. \n    {\n      \"groupId\": 1,               // The ID of the group. \n      \"groupingFields\": [         // The fields that are used to group events. Events with the same field content are assigned to a group. Alerts with the same specified grouping field are sent to the handler in separate notifications. \n        \"alertname\"\n      ],\n      \"groupWait\": 10,                 // The duration for which the system waits after the first alert is sent. After the duration, all alerts are sent in a single notification to the handler. \n      \"groupInterval\": 15,             // The grouping interval. During the silence period of repeated alerts, if new alerts are generated, they will be sent after the group waiting time. \n      \"repeatInterval\": 20             // The silence period of repeated alerts. All alerts are repeatedly sent at specified intervals until the alerts are cleared. \n    }\n  ],\n  \"notifyRules\": [            // Sets the notification rule. \n    {\n      \"notifyObjects\": [\n        {\n          \"notifyType\": \"ARMS_CONTACT\",     // The type of the alert contact. Valid values: ARMS_CONTACT: contact. ARMS_CONTACT_GROUP: contact group. \n          \"name\": \"JohnDoe\",                // The name of the contact or contact group. \n          \"notifyObjectId\": 1               // The ID of the contact or contact group. \n        },\n        {\n          \"notifyType\": \"ARMS_CONTACT_GROUP\",\n          \"name\": \"JohnDoe_group\",\n          \"notifyObjectId\": 2\n        }\n      ],\n      \"notifyChannels\":[\"dingTalk\",\"wechat\",\"webhook\",\"email\"]     // The notification method. Valid values: dingTalk, sms, webhook, email, and wechat. \n    },\n  ],\n}\n```\n\n**Enumerated keys of the tag of the dispatch rule**\n\n*   `_aliyun_arms_userid`: user ID\n*   `_aliyun_arms_involvedObject_kind`: type of the associated object\n*   `_aliyun_arms_involvedObject_id`: ID of the associated object\n*   `_aliyun_arms_involvedObject_name`: name of the associated object\n*   `_aliyun_arms_alert_name`: alert name\n*   `_aliyun_arms_alert_rule_id`: alert rule ID\n*   `_aliyun_arms_alert_type`: alert type\n*   `_aliyun_arms_alert_level`: alert severity",
      "position": "Query",
      "type": "String",
      "required": true
    },
    {
      "name": "RegionId",
      "description": "",
      "position": "Query",
      "type": "String",
      "required": true
    }
  ]
}