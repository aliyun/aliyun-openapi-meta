{
  "name": "UpdateListener",
  "deprecated": false,
  "protocol": "HTTP|HTTPS",
  "method": "GET|POST",
  "pathPattern": "",
  "parameters": [
    {
      "name": "BackendPorts",
      "description": "后端服务器接收请求的端口范围。",
      "position": "Query",
      "type": "RepeatList",
      "required": false,
      "sub_parameters": [
        {
          "name": "FromPort",
          "position": "Query",
          "type": "Integer",
          "required": false
        },
        {
          "name": "ToPort",
          "position": "Query",
          "type": "Integer",
          "required": false
        }
      ]
    },
    {
      "name": "Certificates",
      "description": "SSL证书。",
      "position": "Query",
      "type": "RepeatList",
      "required": false,
      "sub_parameters": [
        {
          "name": "Id",
          "position": "Query",
          "type": "String",
          "required": false
        }
      ]
    },
    {
      "name": "ClientAffinity",
      "description": "客户端亲和性。\n\n- 不传入值时，不保持客户端亲和性，即不能确保来自同一客户端的连接请求始终定向到同一终端节点。\n\n- 取值为**SOURCE_IP**时，保持客户端亲和性。即客户端访问有状态的应用程序时，可以将来自同一客户端的所有请求都定向到同一终端节点，而不考虑源端口和协议。",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "ClientToken",
      "description": "客户端Token，用于保证请求的幂等性。\n\n从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。\n\n> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "Description",
      "description": "监听的描述信息。\n描述长度最大为200个字符。",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "IdleTimeout",
      "description": "连接空闲超时时间。单位：秒。\n\n- TCP：10-900s，默认900s\n- UDP：10-20s ，默认20s \n- HTTP/HTTPS：1-60秒，默认15s",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "ListenerId",
      "description": "监听实例ID。",
      "position": "Query",
      "type": "String",
      "required": true
    },
    {
      "name": "Name",
      "description": "监听的名称。\n\n名称长度为2~128个字符，以大小写字母或中文开头，可包含数字、下划线（_）和短划线（-）。",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "PortRanges",
      "description": "用来接收请求并向终端节点进行转发的端口范围。\n\n可配置的监听端口范围为**1**~**65499**。\n\n最多可配置端口数量与监听路由类型和监听协议类型相关，更多信息，请参见[监听端口](~~153216~~)。",
      "position": "Query",
      "type": "RepeatList",
      "required": false,
      "sub_parameters": [
        {
          "name": "FromPort",
          "position": "Query",
          "type": "Integer",
          "required": true
        },
        {
          "name": "ToPort",
          "position": "Query",
          "type": "Integer",
          "required": true
        }
      ]
    },
    {
      "name": "Protocol",
      "description": "监听的网络传输协议类型，取值：\n\n- **tcp**：TCP协议。\n\n- **udp**：UDP协议。\n\n- **http**：HTTP协议。\n\n- **https**：HTTPS协议。",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "ProxyProtocol",
      "description": "是否开启保持客户端源IP功能。\n\n- **true**：开启保持客户端源IP功能。开启后，支持后端服务查看客户端的原始IP地址。\n\n- **false**（默认值）：不开启保持客户端源IP功能。\n\n> 该参数后续将不在监听API中配置，建议在终端节点组的相关API中进行配置。关于**ProxyProtocol**，请参见[CreateEndpointGroup](~~153259~~)和[UpdateEndpointGroup](~~153262~~)。",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "RegionId",
      "description": "全球加速实例所在的地域ID，仅取值**cn-hangzhou**。",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "RequestTimeout",
      "description": "HTTP/HTTPS的连接请求超时时间。单位：秒。\n\n可选：1-180s，默认60s。\n\n>仅对Protocol（网络传输协议类型）为HTTP或HTTPS的监听有效。如果在超时时间内后端服务器一直没有响应，全球加速将放弃等待，并给客户端返回HTTP 504错误码。",
      "position": "Query",
      "type": "Integer",
      "required": false
    },
    {
      "name": "SecurityPolicyId",
      "description": "安全策略实例ID。取值：\n\n- **tls_cipher_policy_1_0**\n\n    - 支持的TLS版本：TLSv1.0、TLSv1.1和TLSv1.2。\n\n    - 支持的加密算法套件：ECDHE-RSA-AES128-GCM-SHA256、ECDHE-RSA-AES256-GCM-SHA384、ECDHE-RSA-AES128-SHA256、ECDHE-RSA-AES256-SHA384、AES128-GCM-SHA256、AES256-GCM-SHA384、AES128-SHA256、AES256-SHA256、ECDHE-RSA-AES128-SHA、ECDHE-RSA-AES256-SHA、AES128-SHA、AES256-SHA和DES-CBC3-SHA。\n\n- **tls_cipher_policy_1_1**\n\n    - 支持的TLS版本： TLSv1.1和TLSv1.2。\n\n    - 支持的加密算法套件：ECDHE-RSA-AES128-GCM-SHA256、ECDHE-RSA-AES256-GCM-SHA384、ECDHE-RSA-AES128-SHA256、ECDHE-RSA-AES256-SHA384、AES128-GCM-SHA256、AES256-GCM-SHA384、AES128-SHA256、AES256-SHA256、ECDHE-RSA-AES128-SHA、ECDHE-RSA-AES256-SHA、AES128-SHA、AES256-SHA和DES-CBC3-SHA。\n\n- **tls_cipher_policy_1_2**\n\n    - 支持的TLS版本：TLSv1.2。\n\n    - 支持的加密算法套件：ECDHE-RSA-AES128-GCM-SHA256、ECDHE-RSA-AES256-GCM-SHA384、ECDHE-RSA-AES128-SHA256、ECDHE-RSA-AES256-SHA384、AES128-GCM-SHA256、AES256-GCM-SHA384、AES128-SHA256、AES256-SHA256、ECDHE-RSA-AES128-SHA、ECDHE-RSA-AES256-SHA、AES128-SHA、AES256-SHA和DES-CBC3-SHA。\n\n- **tls_cipher_policy_1_2_strict**\n\n    - 支持的TLS版本：TLSv1.2。\n\n    - 支持的加密算法套件：ECDHE-RSA-AES128-GCM-SHA256、ECDHE-RSA-AES256-GCM-SHA384、ECDHE-RSA-AES128-SHA256、ECDHE-RSA-AES256-SHA384、ECDHE-RSA-AES128-SHA和ECDHE-RSA-AES256-SHA。\n\n- **tls_cipher_policy_1_2_strict_with_1_3**\n\n    - 支持的TLS版本：TLSv1.2及TLSv1.3。\n\n    - 支持的加密算法套件：TLS_AES_128_GCM_SHA256、TLS_AES_256_GCM_SHA384、TLS_CHACHA20_POLY1305_SHA256、TLS_AES_128_CCM_SHA256、TLS_AES_128_CCM_8_SHA256、ECDHE-ECDSA-AES128-GCM-SHA256、ECDHE-ECDSA-AES256-GCM-SHA384、ECDHE-ECDSA-AES128-SHA256、ECDHE-ECDSA-AES256-SHA384、ECDHE-RSA-AES128-GCM-SHA256、ECDHE-RSA-AES256-GCM-SHA384、ECDHE-RSA-AES128-SHA256、ECDHE-RSA-AES256-SHA384、ECDHE-ECDSA-AES128-SHA、ECDHE-ECDSA-AES256-SHA、ECDHE-RSA-AES128-SHA、ECDHE-RSA-AES256-SHA。\n\n> 仅HTTPS监听支持此参数。",
      "position": "Query",
      "type": "String",
      "required": false
    },
    {
      "name": "XForwardedForConfig",
      "description": "`XForward`字段配置信息。",
      "position": "Query",
      "type": "Struct",
      "required": false
    }
  ]
}